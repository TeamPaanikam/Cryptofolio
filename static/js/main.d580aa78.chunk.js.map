{"version":3,"sources":["Table.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","coins","map","coin","name","buyPrice","amount","Math","round","currentPrice","Form","changeCoins","allCoins","setAllCoins","console","log","useState","tokenName","ct","lastResult","changeLastResult","changeBuyPrice","changeAmount","for","type","value","onChange","e","target","style","backgroundColor","borderRadius","marginTop","filter","includes","li","onClick","innerHTML","findIndex","c","last","error","App","JSON","parse","localStorage","getItem","useEffect","myHeaders","Headers","append","fetch","method","headers","redirect","then","response","json","result","Object","keys","forEach","catch","setItem","stringify","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d580aa78.chunk.js","sourcesContent":["function Table(props){\r\n    let coins = props.coins;\r\n    return (\r\n        <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Token</th>\r\n            <th>Buy Price</th>\r\n            <th>Amount</th>\r\n            <th>Total Investment</th>\r\n            <th>Current Price</th>\r\n            <th>Current Value</th>\r\n            <th>Profit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {coins.map((coin) => {\r\n            return (\r\n              <tr key={coin.name}>\r\n                <td>{coin.name}</td>\r\n                <td>₹{coin.buyPrice}</td>\r\n                <td>{coin.amount}</td>\r\n                <td>₹{Math.round(coin.buyPrice * coin.amount)}</td>\r\n                <td>₹{coin.currentPrice}</td>\r\n                <td>₹{coin.currentPrice * coin.amount}</td>\r\n                <td>\r\n                  ₹\r\n                  {Math.round(\r\n                    coin.currentPrice * coin.amount -\r\n                      coin.buyPrice * coin.amount\r\n                  )}\r\n                  <small>\r\n                    {\" \"}\r\n                    (\r\n                    {Math.round(\r\n                      ((coin.currentPrice * coin.amount -\r\n                        coin.buyPrice * coin.amount) /\r\n                        (coin.buyPrice * coin.amount)) *\r\n                        100\r\n                    )}\r\n                    %){\" \"}\r\n                  </small>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n","import { useState } from \"react\";\r\n\r\nexport default function Form(props){\r\n    let [coins, changeCoins] = [props.coins, props.changeCoins];\r\n    \r\n    let [allCoins, setAllCoins] = [props.allCoins, props.setAllCoins];\r\n    console.log(allCoins)\r\n    let [tokenName, ct] = useState(\"\");\r\n    let [lastResult, changeLastResult] = [props.lastResult, props.changeLastResult];\r\n    let [buyPrice, changeBuyPrice] = useState();\r\n    let [amount, changeAmount] = useState();\r\n    return (\r\n        <form>\r\n        <div>\r\n          <label for=\"token\">Token Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"token\"\r\n            value={tokenName}\r\n            onChange={(e) => ct(e.target.value)}\r\n          ></input>\r\n          <ul\r\n            style={{\r\n              backgroundColor: \"#1aa34a\",\r\n              borderRadius: \"0 0 5px 5px\",\r\n              // padding: \"0.5em\",\r\n              marginTop: 0,\r\n            }}\r\n          >\r\n            {tokenName\r\n              ? allCoins\r\n                  .filter((coin) => coin.includes(tokenName))\r\n                  .map((li) => (\r\n                    <div\r\n                      key={li}\r\n                      onClick={(e) => {\r\n                        console.log(e.target.innerHTML);\r\n                        ct(e.target.innerHTML);\r\n                      }}\r\n                    >\r\n                      {li}\r\n                    </div>\r\n                  ))\r\n              : \"\"}\r\n          </ul>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"buyprice\">Buy Price</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"buyPrice\"\r\n            onChange={(e) => changeBuyPrice(e.target.value)}\r\n          ></input>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"buyprice\">Amount</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"amount\"\r\n            onChange={(e) => changeAmount(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            console.log(allCoins);\r\n            if (allCoins.findIndex((c) => c === tokenName) !== -1)\r\n              changeCoins([\r\n                ...coins,\r\n                { name: tokenName, amount: amount, buyPrice: buyPrice, currentPrice: lastResult[tokenName].last },\r\n              ]);\r\n            else console.error(\"No such token\");\r\n          }}\r\n        >\r\n          Add\r\n        </button>\r\n      </form>\r\n    )\r\n}","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nfunction App() {\n  let [coins, changeCoins] = useState(JSON.parse(localStorage.getItem(\"coins\")) || []);\n  let [allCoins, setAllCoins] = useState([]);\n  let [lastResult, changeLastResult] = useState();\n\n  useEffect(() => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n\n    var requestOptions = {\n      method: \"GET\",\n      headers: myHeaders,\n      redirect: \"follow\",\n    };\n\n    fetch(\n      \"https://cors-proxy-cryptofolio.herokuapp.com/fetch/https://api.wazirx.com/api/v2/tickers\",\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        changeLastResult(result)\n        setAllCoins(Object.keys(result));\n        coins.forEach((coin) => {\n          coin.currentPrice = result[coin.name].last;\n        });\n      })\n      .catch((error) => console.log(\"error\", error));\n      localStorage.setItem(\"coins\", JSON.stringify(coins));\n  }, [coins]);\n  return (\n    <div className=\"App App-header\">\n      <h1>Cryptofolio</h1>\n      <Table coins = {coins}/>\n      <Form allCoins={allCoins} lastResult={lastResult} changeLastResult={changeLastResult} coins={coins} changeCoins ={changeCoins}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}